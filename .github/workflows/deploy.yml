name: Deploy

on:
  push:
    branches: ['main', 'dev', 'release']

jobs:
  init:
    runs-on: ubuntu-latest
    outputs:
      stage: ${{ steps.setvars.outputs.stage }}
      tag: ${{ steps.setvars.outputs.tag }}
    steps:
      - id: setvars
        run: |
          case "${{ github.ref }}" in
            refs/heads/main)
              echo "::set-output name=stage::live"
              echo "::set-output name=tag::latest"
              ;;
            refs/heads/dev)
              echo "::set-output name=stage::dev"
              echo "::set-output name=tag::dev"
              ;;
            refs/heads/release)
              echo "::set-output name=stage::release"
              echo "::set-output name=tag::stable"
              ;;
          esac

  check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actionsx/prettier@v2
        with:
          args: --check .

  push:
    runs-on: ubuntu-latest
    needs: [init, check]
    steps:
      - uses: actions/checkout@v2
      - uses: docker/setup-buildx-action@v1
      - uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKER_ORGANISATION }}/frontend:${{ needs.init.outputs.tag }}

  deploy:
    runs-on: ubuntu-latest
    needs: [init, push]
    steps:
      - name: Install SSH key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          known_hosts: ${{ secrets.SSH_KNOWN_HOSTS }}
      - run: ssh ${{ secrets.DEPLOY_SERVER }} ${{ needs.init.outputs.stage }}
